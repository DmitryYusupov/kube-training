---
apiVersion: v1
kind: Service
metadata:
  name: country-srv
  namespace: kube-training
spec:
  selector:
    app: country
    type: server
  ports:
  #accept connection on 8080
  - port: 8080
    #route trafic to 8081
    targetPort: 8010


---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: country-deployment
  namespace: kube-training
spec:
  replicas: 2

  #The Pods are labeled
  template:
    metadata:
      name: country-pod
      labels:
        app: country
        type: server

    spec:
      containers:
      - name: country-cntr
        image: usikovich/countryservice
        env:
          #You can not to pass them and you names like in kube
          #But i prefer to use my own names
        - name: KUBER_CITY_SERVICE_HOST
          value: $(CITY_SRV_SERVICE_HOST)
        - name: KUBER_CITY_SERVICE_PORT
          value: $(CITY_SRV_SERVICE_PORT)
        - name: KUBER_CITY_SERVICE_NAME
          value: city-srv

          #Here i will use default Ambassador Host and port ENV names,
          #but logical service name i will pass
        - name: KUBER_AMBASSADOR_SERVICE_NAME
          value: gtw-ambassador
        imagePullPolicy: Always
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 20
          #Number of seconds after which the probe times out.
          #Defaults to 1 second. Minimum value is 1.
          timeoutSeconds: 2
          httpGet:
            path: /actuator/health
            port: 8010
      restartPolicy: Always

  #defines how the Deployment finds which Pods to manage
  selector:
    matchLabels:
      app: country
      type: server